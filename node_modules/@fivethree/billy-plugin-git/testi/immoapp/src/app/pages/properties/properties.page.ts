import { FivLoadingContent } from '@fivethree/core';
import { Component, OnInit } from '@angular/core';
import { Observable, timer } from 'rxjs';
import { Property } from 'shared';
import { trigger, transition, query, style, stagger, animate } from '@angular/animations';
import { Select } from '@ngxs/store';
import { Dispatch } from '@ngxs-labs/dispatch-decorator';
import { GetAllProperties } from '@store/properties/properties.actions';
import { NavigateForward } from '@fivethree/ngxs-ionic-router-plugin';
import { PropertiesState } from '@store/properties/properties.state';

@Component({
  selector: 'app-properties',
  templateUrl: './properties.page.html',
  styleUrls: ['./properties.page.scss'],
  animations: [
    trigger('listAnimation', [
      transition('* => *', [
        query(':enter', [
          style({ opacity: 0 }),
          stagger(100, [
            animate('20ms 20ms', style({ opacity: 1 }))
          ])
        ], { optional: true })
      ])
    ])
  ]
})
export class PropertiesPage implements OnInit {

  animation;

  @Select(PropertiesState.properties)
  properties: Observable<Property[]>;

  constructor() {
  }

  ngOnInit(): void {
    this.loadProperties();
  }

  @Dispatch()
  loadProperties = () => new GetAllProperties()

  @Dispatch()
  openProperty = (property: Property) => new NavigateForward(['/properties', property.id])

  onRefresh(refresher: FivLoadingContent) {
    this.loadProperties();
    timer(800).subscribe(() => refresher.completeRefresh());
  }

  handleAnimation(animation) {
    this.animation = animation;
    this.animation.setSpeed(0.6);
    this.animation.play();
  }

  navigate() {
  }
}
