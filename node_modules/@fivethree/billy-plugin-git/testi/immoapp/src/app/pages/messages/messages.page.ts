import { Component, OnInit } from '@angular/core';
import { Dispatch } from '@ngxs-labs/dispatch-decorator';
import { GetMessages, MessageRedirect } from '@store/messages/messages.actions';
import { Select } from '@ngxs/store';
import { Observable, timer, zip } from 'rxjs';
import { MessagesState } from '@store/messages/messages.state';
import { Message } from 'shared';
import { FivLoadingContent } from '@fivethree/core';
import { first } from 'rxjs/operators';

@Component({
  selector: 'app-messages',
  templateUrl: './messages.page.html',
  styleUrls: ['./messages.page.scss'],
})
export class MessagesPage implements OnInit {

  animation: any;

  @Select(MessagesState.notifications)
  notifications$: Observable<Message[]>;

  constructor() { }

  ngOnInit() {
  }

  @Dispatch()
  loadMessages = () => new GetMessages()

  handleAnimation(animation) {
    console.log('created animation', animation);
    this.animation = animation;
    this.animation.setSpeed(0.8);
    this.animation.play();
  }

  onRefresh(refresher: FivLoadingContent) {
    this.loadMessages();
    const t = timer(600);
    zip(t, this.notifications$)
      .pipe(
        first()
      ).subscribe(() => refresher.completeRefresh());
  }

  @Dispatch()
  onNotificationClick = (notification: Message) => new MessageRedirect(notification.id)

}
