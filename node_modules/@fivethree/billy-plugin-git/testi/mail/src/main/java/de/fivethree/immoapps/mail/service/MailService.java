package de.fivethree.immoapps.mail.service;

import de.fivethree.immoapps.mail.domain.Mail;
import de.fivethree.immoapps.mail.domain.MailReceiver;
import de.fivethree.immoapps.mail.repository.MailRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.Collection;

@Service
@Transactional
public class MailService {
    @Autowired
    private MailRepository mailRepository;

    public void sendHTMLMail(String sender, Collection<String> receivers, Collection<String> ccReceivers,
                             Collection<String> bccReceivers, String subject, String body) {
        this.saveMailIntoDatabase(new Mail(true, sender, subject, body), receivers, ccReceivers, bccReceivers);
    }

    public void sendPlainMail(String sender, Collection<String> receivers, Collection<String> ccReceivers,
                              Collection<String> bccReceivers, String subject, String body) {
        this.saveMailIntoDatabase(new Mail(false, sender, subject, body), receivers, ccReceivers, bccReceivers);
    }

    private void saveMailIntoDatabase(Mail newMail, Collection<String> receivers, Collection<String> ccReceivers,
                                      Collection<String> bccReceivers) {
        for (String receiver : receivers) {
            newMail.getReceivers().add(new MailReceiver(receiver));
        }

        for (String ccReceiver : ccReceivers) {
            newMail.getCcReceivers().add(new MailReceiver(ccReceiver));
        }

        for (String bccReceiver : bccReceivers) {
            newMail.getBccReceivers().add(new MailReceiver(bccReceiver));
        }

        mailRepository.save(newMail);
    }
}
