package de.fivethree.immoapps.backend.model.csv;

import de.fivethree.immoapps.backend.domain.checklist.Checklist;
import de.fivethree.immoapps.backend.domain.checklisttemplate.ChecklistTemplate;
import de.fivethree.immoapps.backend.domain.property.Property;
import de.fivethree.immoapps.backend.domain.user.User;
import de.fivethree.immoapps.backend.util.ModelMapper;

import java.util.*;

public class PropertyCsvHelper {

    public static final String ID = "ID";
    public static final String NAME = "NAME";
    public static final String CITY = "STADT";
    public static final String ZIP = "PLZ";
    public static final String STREET_AND_NO = "STRASSE UND HAUSNUMMER";

    private static List<String> headers = Arrays.asList(ID, NAME, CITY, ZIP, STREET_AND_NO);

    public static List<String> getHeaders() {
        return headers;
    }

    public static List<Map<String, String>> getCsvValues(Collection<Property> properties) {
        List<Map<String, String>> ret = new ArrayList<>();

        for (Property property : properties) {
            Map<String, String> map = new HashMap<>();
            map.put(ID, "" + property.getId());
            map.put(NAME, property.getName());
            map.put(CITY, property.getCity());
            map.put(ZIP, property.getZip());
            map.put(STREET_AND_NO, property.getStreetAndNo());
            ret.add(map);
        }

        return ret;
    }

    public static List<Property> getPropertiesFromCsvValues(List<Map<String, String>> csvValues,
                                                            User hausverwalter,
                                                            Collection<ChecklistTemplate> templates) {
        List<Property> properties = new ArrayList<>();

        for (Map<String, String> csvValue : csvValues) {
            Property property = new Property(csvValue.get(NAME), csvValue.get(CITY), csvValue.get(ZIP),
                    csvValue.get(STREET_AND_NO));
            property.setHausverwalter(hausverwalter);
            List<Checklist> checklists = ModelMapper.mapChecklistTemplatesToChecklists(templates, property);
            property.getChecklists().addAll(checklists);
            properties.add(property);
        }

        return properties;
    }
}
