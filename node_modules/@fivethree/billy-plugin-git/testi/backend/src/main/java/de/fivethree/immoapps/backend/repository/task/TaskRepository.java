package de.fivethree.immoapps.backend.repository.task;

import de.fivethree.immoapps.backend.domain.property.Property;
import de.fivethree.immoapps.backend.domain.task.Task;
import de.fivethree.immoapps.backend.domain.user.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.time.LocalDate;
import java.util.Collection;
import java.util.List;
import java.util.Set;

@Repository
public interface TaskRepository extends JpaRepository<Task, Long> {
    @Query(value = "SELECT t FROM Task t " +
            "LEFT JOIN FETCH t.user user " +
            "LEFT JOIN FETCH t.property prop " +
            "WHERE user IN(:users) AND prop = :property")
    Set<Task> findAllByUsersAndProperty(@Param("users") Collection<User> users,
                                        @Param("property") Property property);

    @Query(value = "SELECT t FROM Task t " +
            "LEFT JOIN FETCH t.property prop " +
            "LEFT JOIN FETCH t.user user " +
            "LEFT JOIN FETCH t.pruefkriterien kriterien " +
            "LEFT JOIN FETCH t.auftragGeber auftragGeber " +
            "LEFT JOIN FETCH t.scheduleOption scheduleOption " +
            "LEFT JOIN FETCH kriterien.category kritCat " +
            "LEFT JOIN FETCH auftragGeber.additionalUserInfo " +
            "LEFT JOIN FETCH user.additionalUserInfo " +
            "LEFT JOIN FETCH user.roles " +
            "LEFT JOIN FETCH auftragGeber.roles " +
            "WHERE t.id = :id AND prop = :property")
    Task findByIdAndProperty(@Param("id") Long id, @Param("property") Property property);

    @Query(value = "SELECT t FROM Task t " +
            "LEFT JOIN FETCH t.user user " +
            "LEFT JOIN FETCH t.property prop " +
            "LEFT JOIN FETCH t.auftragGeber auftraggeber " +
            "LEFT JOIN FETCH t.scheduleOption scheduleOption " +
            "LEFT JOIN FETCH t.pruefkriterien kriterien " +
            "LEFT JOIN FETCH kriterien.category kritCat " +
            "LEFT JOIN FETCH kriterien.picto picto " +
            "LEFT JOIN FETCH auftraggeber.additionalUserInfo " +
            "LEFT JOIN FETCH user.additionalUserInfo " +
            "LEFT JOIN FETCH user.roles " +
            "LEFT JOIN FETCH auftraggeber.roles " +
            "LEFT JOIN FETCH prop.users propUsers " +
            "LEFT JOIN FETCH prop.hausverwalter hvw " +
            "WHERE t.active = true AND (t.startDate IS NULL OR t.startDate <= :startDateCompare)")
    Set<Task> findAllActiveByStartDateAndFetchEverything(@Param("startDateCompare") LocalDate startDateCompare);
}
