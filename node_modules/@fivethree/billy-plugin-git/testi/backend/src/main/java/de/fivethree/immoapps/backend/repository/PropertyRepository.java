package de.fivethree.immoapps.backend.repository;

import de.fivethree.immoapps.backend.domain.property.Property;
import de.fivethree.immoapps.backend.domain.user.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.time.LocalDateTime;
import java.util.Set;

@Repository
public interface PropertyRepository extends JpaRepository<Property, Long> {
    @Query(value = "SELECT p FROM Property p " +
            "WHERE p.id = :id AND p.hausverwalter.id = :hausverwalterId")
    Property findByIdAndHausverwalter(@Param("id") Long id, @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT p FROM Property p " +
            "LEFT JOIN FETCH p.users users " +
            "WHERE :user IN (users) AND p.id = :id")
    Property findByIdAndUsersContains(@Param("id") Long id, @Param("user") User user);

    @Query(value = "SELECT p FROM Property p " +
            "LEFT JOIN FETCH p.tasks tasks " +
            "LEFT JOIN FETCH tasks.property prop " +
            "LEFT JOIN FETCH tasks.pruefkriterien kriterien " +
            "LEFT JOIN FETCH tasks.user user " +
            "LEFT JOIN FETCH tasks.auftragGeber auftragGeber " +
            "LEFT JOIN FETCH tasks.scheduleOption scheduleOption " +
            "LEFT JOIN FETCH kriterien.category kritCat " +
            "LEFT JOIN FETCH user.additionalUserInfo " +
            "LEFT JOIN FETCH auftragGeber.additionalUserInfo " +
            "LEFT JOIN FETCH user.roles " +
            "LEFT JOIN FETCH auftragGeber.roles " +
            "LEFT JOIN FETCH prop.users propUsers " +
            "WHERE p.id = :id AND p.hausverwalter.id = :hausverwalterId")
    Property findByIdAndHausverwalterAndFetchTasks(@Param("id") Long id, @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT p FROM Property p " +
            "WHERE p.hausverwalter.id = :hausverwalterId")
    Set<Property> findByHausverwalter(@Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT p FROM Property p " +
            "LEFT JOIN FETCH p.users users " +
            "WHERE :user IN (users)")
    Set<Property> findByUser(@Param("user") User user);

    @Query(value = "SELECT p FROM Property p " +
            "LEFT JOIN FETCH p.users users " +
            "LEFT JOIN FETCH users.roles " +
            "LEFT JOIN FETCH p.checklists lists " +
            "LEFT JOIN FETCH lists.levels lvls " +
            "LEFT JOIN FETCH lvls.pruefkriterien kriterien " +
            "LEFT JOIN FETCH kriterien.category " +
            "LEFT JOIN FETCH kriterien.picto picto " +
            "WHERE p.id = :id AND p.hausverwalter.id = :hausverwalterId")
    Property findByIdAndHausverwalterAndFetchAllDetails(@Param("id") Long id,
                                                        @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT p FROM Property p " +
            "LEFT JOIN FETCH p.users users " +
            "LEFT JOIN FETCH p.hausverwalter hvw " +
            "LEFT JOIN FETCH users.roles " +
            "LEFT JOIN FETCH users.additionalUserInfo " +
            "LEFT JOIN FETCH hvw.roles " +
            "LEFT JOIN FETCH hvw.additionalUserInfo " +
            "WHERE p.id = :id AND hvw.id = :hausverwalterId")
    Property findByIdAndHausverwalterAndFetchUsers(@Param("id") Long id,
                                                   @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT p FROM Property p " +
            "LEFT JOIN FETCH p.users users " +
            "LEFT JOIN FETCH users.roles " +
            "LEFT JOIN FETCH p.checklists lists " +
            "LEFT JOIN FETCH lists.levels lvls " +
            "LEFT JOIN FETCH lvls.pruefkriterien kriterien " +
            "LEFT JOIN FETCH kriterien.category " +
            "LEFT JOIN FETCH kriterien.picto picto " +
            "WHERE :user IN (users) AND p.id = :id")
    Property findByIdAndUsersContainsAndFetchAllDetails(@Param("id") Long id, @Param("user") User user);

    @Query(value = "SELECT p FROM Property p " +
            "LEFT JOIN FETCH p.checklists " +
            "WHERE p.id = :id AND p.hausverwalter.id = :hausverwalterId")
    Property findByIdAndHausverwalterAndFetchChecklists(@Param("id") Long id,
                                                        @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT COUNT(p) FROM Property p " +
            "LEFT JOIN p.hausverwalter hvw " +
            "WHERE hvw.id = :hausverwalterId AND " +
            "p.createdDate >= :startDateCompare AND p.createdDate < :endDateCompare")
    Long countHausverwalterPropertyCreationByStartAndEnd(@Param("hausverwalterId") Long hausverwalterId,
                                                         @Param("startDateCompare") LocalDateTime startDateCompare,
                                                         @Param("endDateCompare") LocalDateTime endDateCompare);
}
