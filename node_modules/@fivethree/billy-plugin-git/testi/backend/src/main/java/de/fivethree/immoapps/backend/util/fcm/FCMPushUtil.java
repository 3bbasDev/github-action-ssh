package de.fivethree.immoapps.backend.util.fcm;

import org.hibernate.mapping.Collection;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.web.client.RestTemplate;

import java.util.Collections;
import java.util.List;
import java.util.Map;

public class FCMPushUtil {
    private final static String FCM_LEGACY_SEND = "https://fcm.googleapis.com/fcm/send";
    private final static String SERVER_KEY = "AAAAVUKLjZo:APA91bHGuMLgfUMbGukm87Qga2FBYd05S2C5KxPYQSc_0vnWoXf4FwaD1HxA52dXcLzT3kIQJSoXHTG4q-DeySJt0rOvrsAp8tiZAED98hjKdqYIRlayd83QeAkOR8Uq-4TsArQmegO1";


    public static void sendLegacyPushToToken(String token, String title, String message) {
        if (token == null || token.isEmpty()) {
            return;
        }

        sendLegacyPushToTokens(Collections.singletonList(token), title, message);
    }

    public static void sendLegacyPushToTokens(List<String> tokens, String title, String message) {
        if (tokens == null || tokens.size() == 0) {
            return;
        }

        LegacyPush push = new LegacyPush(tokens, new FCMPushNotification(title, message));
        push.setData(new FCMPushData(title, message));
        sendLegacyPush(push);
    }

    public static void sendLegacyPushToToken(String token, String title, String message, Map<String, String> map) {
        if (token == null || token.isEmpty()) {
            return;
        }

        sendLegacyPushToTokens(Collections.singletonList(token), title, message, map);
    }

    public static void sendLegacyPushToTokens(List<String> tokens, String title, String message, Map<String, String> map) {
        if (tokens == null || tokens.size() == 0) {
            return;
        }

        LegacyPush push = new LegacyPush(tokens, new FCMPushNotification(title, message));
        push.setData(new FCMPushData(getCustomJsonString(map), title, message));
        sendLegacyPush(push);
    }

    private static String getCustomJsonString(Map<String, String> map) {
        String ret = "{";
        int i = 0;
        for (String key : map.keySet()) {
            ret += "\"" + key + "\":\"" + map.get(key) + "\"";
            if (i++ < map.size() - 1) {
                ret += ",";
            }
        }

        ret += "}";

        return ret;
    }

    private static void sendLegacyPush(LegacyPush push) {
        RestTemplate restTemplate = new RestTemplate();
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(org.springframework.http.MediaType.APPLICATION_JSON);
        headers.set("Authorization", "key=" + SERVER_KEY);
        HttpEntity<LegacyPush> entity = new HttpEntity<>(push, headers);
        restTemplate.exchange(FCM_LEGACY_SEND, HttpMethod.POST, entity, String.class).getBody();

        /*
        Client httpClient = ClientBuilder.newClient();
        httpClient.target(FCM_LEGACY_SEND)
                .request(MediaType.APPLICATION_JSON)
                .header("Content-Type", "application/json")
                .header("Authorization", "key=" + SERVER_KEY)
                .post(Entity.entity(push, MediaType.APPLICATION_JSON)); */
    }
}
