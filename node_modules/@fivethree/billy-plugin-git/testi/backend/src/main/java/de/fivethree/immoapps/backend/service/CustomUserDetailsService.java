package de.fivethree.immoapps.backend.service;

import de.fivethree.immoapps.backend.security.UserPrincipal;
import de.fivethree.immoapps.backend.domain.user.User;
import de.fivethree.immoapps.backend.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
public class CustomUserDetailsService implements UserDetailsService {
  @Autowired
  private UserRepository userRepository;

  @Override
  @Transactional
  public UserDetails loadUserByUsername(String email)
      throws UsernameNotFoundException {
    // Let people login with either username or email
    User user = userRepository.findByEmailAndNotDeleted(email);

    if (user == null) {
      throw new UsernameNotFoundException("User not found with email : " + email);
    }

    return UserPrincipal.create(user);
  }

  // This method is used by JWTAuthenticationFilter
  @Transactional
  public UserDetails loadUserById(Long id) {
    User user = userRepository.getNotDeletedUserByIdAndFetchAdditionalInfo(id);

    if (user == null) {
      throw new UsernameNotFoundException("User not found with id : " + id);
    }

    return UserPrincipal.create(user);
  }

}
