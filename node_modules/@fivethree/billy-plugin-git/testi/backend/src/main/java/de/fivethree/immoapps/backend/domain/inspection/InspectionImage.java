package de.fivethree.immoapps.backend.domain.inspection;

import de.fivethree.immoapps.backend.domain.*;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import javax.persistence.*;

@Entity
@Table(name = "inspection_image")
public class InspectionImage implements IBase64AndImageEntity {
    @Id
    @GeneratedValue(generator = "sequence")
    @SequenceGenerator(name = "sequence", sequenceName = "MY_SEQ", allocationSize = 1, initialValue = 1000)
    private Long id;

    @Lob
    @Column(name = "data")
    private byte[] data;

    @Column(name = "name")
    private String name;

    @Column(name = "type")
    private String type;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "inspection_result_id")
    private InspectionResult inspectionResult;

    @Override
    public String getUrl() {
        return ServletUriComponentsBuilder.fromCurrentContextPath()
                .path("/immoapps/api/inspections/images/" + getId())
                .toUriString();
    }

    @Override
    public String getBase64Url() {
        return ServletUriComponentsBuilder.fromCurrentContextPath()
                .path("/immoapps/api/inspections/images/" + getId() + "/base64")
                .toUriString();
    }

    public InspectionResult getInspectionResult() {
        return inspectionResult;
    }

    public void setInspectionResult(InspectionResult inspectionResult) {
        this.inspectionResult = inspectionResult;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public byte[] getData() {
        return data;
    }

    public void setData(byte[] data) {
        this.data = data;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }
}
