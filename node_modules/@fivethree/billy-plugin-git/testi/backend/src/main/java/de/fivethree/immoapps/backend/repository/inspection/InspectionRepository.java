package de.fivethree.immoapps.backend.repository.inspection;

import de.fivethree.immoapps.backend.domain.inspection.Inspection;
import de.fivethree.immoapps.backend.domain.property.Property;
import de.fivethree.immoapps.backend.domain.user.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;
import java.util.Set;

@Repository
public interface InspectionRepository extends JpaRepository<Inspection, Long> {
    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.user user " +
            "LEFT JOIN FETCH i.inspectionCriterias criterias " +
            "LEFT JOIN FETCH i.inspectionResults results " +
            "LEFT JOIN FETCH i.property prop " +
            "LEFT JOIN FETCH user.additionalUserInfo " +
            "LEFT JOIN FETCH user.roles " +
            "LEFT JOIN FETCH criterias.pruefkriterium kriterium " +
            "LEFT JOIN FETCH kriterium.category " +
            "LEFT JOIN FETCH kriterium.picto " +
            "LEFT JOIN FETCH results.images images " +
            "LEFT JOIN FETCH results.pruefkriterium resultKriterium " +
            "LEFT JOIN FETCH resultKriterium.category " +
            "LEFT JOIN FETCH resultKriterium.picto " +
            "WHERE user.id = :userId AND i.done = false")
    Set<Inspection> findAllOpenByOwner(@Param("userId") Long userId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.user user " +
            "LEFT JOIN FETCH i.inspectionCriterias criterias " +
            "LEFT JOIN FETCH i.inspectionResults results " +
            "LEFT JOIN FETCH i.property prop " +
            "LEFT JOIN FETCH user.additionalUserInfo " +
            "LEFT JOIN FETCH user.roles " +
            "LEFT JOIN FETCH criterias.pruefkriterium kriterium " +
            "LEFT JOIN FETCH kriterium.category " +
            "LEFT JOIN FETCH kriterium.picto " +
            "LEFT JOIN FETCH results.images images " +
            "LEFT JOIN FETCH results.pruefkriterium resultKriterium " +
            "LEFT JOIN FETCH resultKriterium.category " +
            "LEFT JOIN FETCH resultKriterium.picto " +
            "WHERE user.id = :userId AND i.done = true")
    Set<Inspection> findAllClosedByOwner(@Param("userId") Long userId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.user user " +
            "LEFT JOIN FETCH i.property prop " +
            "WHERE user IN(:users) AND i.done = false AND prop = :property")
    Set<Inspection> findAllOpenByUsersAndProperty(@Param("users") Collection<User> users,
                                                   @Param("property") Property property);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.user user " +
            "WHERE user = :user AND i.done = false")
    Set<Inspection> findAllOpenByUser(@Param("user") User user);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.property prop " +
            "LEFT JOIN FETCH prop.hausverwalter hvw " +
            "WHERE hvw.id = :hausverwalterId AND i.done = false")
    Set<Inspection> findAllOpenByHausverwalter(@Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.property prop " +
            "LEFT JOIN FETCH prop.hausverwalter hvw " +
            "WHERE hvw.id = :hausverwalterId AND prop = :property AND i.done = false")
    Set<Inspection> findAllOpenByPropertyAndHausverwalterId(@Param("property") Property property,
                                                             @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.user user " +
            "WHERE i.id = :id AND user.id = :userId")
    Inspection findByIdAndOwnerId(@Param("id") Long id, @Param("userId") Long userId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.property prop " +
            "LEFT JOIN FETCH prop.hausverwalter hvw " +
            "WHERE i.id = :id AND hvw.id = :hausverwalterId AND i.done = false")
    Inspection findOpenByIdAndHausverwalterId(@Param("id") Long id, @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.property prop " +
            "LEFT JOIN FETCH prop.hausverwalter hvw " +
            "WHERE hvw.id = :hausverwalterId AND i.done = true")
    Set<Inspection> findAllClosedByHausverwalter(@Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.property prop " +
            "LEFT JOIN FETCH i.user user " +
            "LEFT JOIN FETCH i.inspectionResults results " +
            "LEFT JOIN FETCH results.pruefkriterium criteria " +
            "LEFT JOIN FETCH results.images images " +
            "LEFT JOIN FETCH prop.hausverwalter hvw " +
            "WHERE hvw.id = :hausverwalterId AND i.done = true AND i.id = :id")
    Inspection findClosedByIdAndHausverwalter(@Param("id") Long id,
                                              @Param("hausverwalterId") Long hausverwalterId);

    @Query(value = "SELECT i FROM Inspection i " +
            "LEFT JOIN FETCH i.property prop " +
            "WHERE prop = :property AND i.done = true")
    Set<Inspection> findAllClosedByProperty(@Param("property") Property property);


    @Query(value = "SELECT COUNT(i) FROM Inspection i " +
            "LEFT JOIN i.property prop " +
            "LEFT JOIN prop.hausverwalter hvw " +
            "WHERE hvw.id = :hausverwalterId AND i.done = true AND " +
            "i.finishedDate >= :startDateCompare AND i.finishedDate < :endDateCompare")
    Long countClosedHausverwalterInspectionsByFinishedDateBetween(@Param("hausverwalterId") Long hausverwalterId,
                                                                  @Param("startDateCompare") LocalDateTime startDateCompare,
                                                                  @Param("endDateCompare") LocalDateTime endDateCompare);
}
