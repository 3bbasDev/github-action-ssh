import { NgModule, Injectable } from '@angular/core';
import { Routes, RouterModule, CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';
import { TokenService } from './services/token/token.service';
import { Observable } from 'rxjs';
import decode from 'jwt-decode';

@Injectable()
export class IsAuthenticated implements CanActivate {
  constructor(private token: TokenService, private router: Router) { }

  canActivate(
    route: ActivatedRouteSnapshot,
    state: RouterStateSnapshot
  ): Observable<boolean> | Promise<boolean> | boolean {
    console.log('can activate');
    return this.token.loadToken()
      .then((isAuthenticated) => {
        console.log(isAuthenticated);
        if (isAuthenticated) {
          return true;
        } else {
          this.router.navigate(['/login']);
          return false;
        }
      });
  }

}

@Injectable()
export class HasPermissions implements CanActivate {
  constructor(private token: TokenService, private router: Router) { }

  canActivate(
    route: ActivatedRouteSnapshot,
    state: RouterStateSnapshot
  ): Observable<boolean> | Promise<boolean> | boolean {
    console.log('has permissions');
    const expectedRoles: string[] = route.data.expectedRoles;

    return this.token.loadToken()
      .then((token) => {
        console.log(decode(token));
        return true;
      });
  }

}

const routes: Routes = [
  {
    path: 'login',
    loadChildren: './pages/login/login.module#LoginPageModule'
  },
  {
    path: '',
    loadChildren: './pages/home/home.module#HomePageModule',
    canActivate: [IsAuthenticated]
  },
  {
    path: 'users',
    loadChildren: './pages/users/users.module#UsersPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'users/edit',
    loadChildren: './pages/user-create/user-create.module#UserCreatePageModule',
    canActivate: [IsAuthenticated]
  },
  {
    path: 'users/:id',
    loadChildren: './pages/user/user.module#UserPageModule',
    canActivate: [IsAuthenticated]
  },
  {
    path: 'properties',
    loadChildren: './pages/properties/properties.module#PropertiesPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'properties/edit',
    loadChildren: './pages/property-create/property-create.module#PropertyCreatePageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'properties/:id',
    loadChildren: './pages/property/property.module#PropertyPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'checklists',
    loadChildren: './pages/checklists/checklists.module#ChecklistsPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'checklists/create',
    loadChildren: './pages/checklist-create/checklist-create.module#ChecklistCreatePageModule',
    canActivate: [IsAuthenticated]
  },
  {
    path: 'checklists/:id',
    loadChildren: './pages/checklist-edit/checklist-edit.module#ChecklistEditPageModule',
    canActivate: [IsAuthenticated]
  },
  { path: '', redirectTo: '', pathMatch: 'full' },
  {
    path: 'settings',
    loadChildren: './pages/me/me.module#MePageModule',
    canActivate: [IsAuthenticated]
  },
  {
    path: 'settings/password',
    loadChildren: './pages/password-change/password-change.module#PasswordChangePageModule',
    canActivate: [IsAuthenticated]
  },
  {
    path: 'password/reset',
    loadChildren: './pages/password-reset/password-reset.module#PasswordResetPageModule'
  },
  {
    path: 'inspections',
    loadChildren: './pages/checks/checks.module#ChecksPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'inspections/create',
    loadChildren: './pages/inspection-create/inspection-create.module#InspectionCreatePageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'inspections/:id',
    loadChildren: './pages/inspection/inspection.module#InspectionPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'task/:id',
    loadChildren: './pages/task/task.module#TaskPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_HAUSVERWALTER', 'ROLE_MITARBEITER'] }
  },
  {
    path: 'hausverwalter',
    loadChildren: './pages/hausverwalter/hausverwalter.module#HausverwalterPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_ADMIN'] }
  },
  {
    path: 'hausverwalter/:id',
    loadChildren: './pages/verwalter/verwalter.module#VerwalterPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_ADMIN'] }
  },
  {
    path: 'admin-checklists',
    loadChildren: './pages/admin-checklists/admin-checklists.module#AdminChecklistsPageModule',
    canActivate: [IsAuthenticated, HasPermissions], data: { expectedRoles: ['ROLE_ADMIN'] }
  },
  {
    path: '**',
    loadChildren: './pages/page-not-found/page-not-found.module#PageNotFoundPageModule'
  }
];

@NgModule({
  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],
  exports: [RouterModule],
  providers: [IsAuthenticated, HasPermissions]

})
export class AppRoutingModule { }
