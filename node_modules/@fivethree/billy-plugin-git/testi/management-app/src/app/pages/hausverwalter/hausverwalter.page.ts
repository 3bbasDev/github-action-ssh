import { ApiService } from './../../services/api.service';
import { Component, ViewChild, AfterViewInit } from '@angular/core';
import { Observable } from 'rxjs';
import { User } from 'shared';
import { DataService } from '@services/data.service';
import { Router, ActivatedRoute, NavigationEnd } from '@angular/router';
import { ToastService } from '@services/toast.service';
import { NavController, AlertController } from '@ionic/angular';
import { first, filter } from 'rxjs/operators';
import { MatTableDataSource } from '@angular/material/table';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';

@Component({
  selector: 'app-hausverwalter',
  templateUrl: './hausverwalter.page.html',
  styleUrls: ['./hausverwalter.page.scss'],
})
export class HausverwalterPage implements AfterViewInit {


  public users: Observable<User[]>;
  searchInput = '';
  tableText = {
    emptyMessage: 'Keine Hausverwalter gefunden...',
    totalMessage: 'Hausverwalter'
  };

  dataSource = new MatTableDataSource<User>();
  displayedColumns: string[] = ['id','company', 'firstname', 'lastname','email',];
  @ViewChild(MatPaginator) paginator: MatPaginator;
  @ViewChild(MatSort) sort: MatSort;

  constructor(public data: DataService,
    private api: ApiService,
    private alertController: AlertController,
    public router: Router, public route: ActivatedRoute, public toast: ToastService, public navCtrl: NavController) {
  }

  ngAfterViewInit(): void {
    this.paginator._intl.itemsPerPageLabel = 'Benutzer pro Seite';
    this.paginator._intl.firstPageLabel = 'Erste Seite';
    this.paginator._intl.nextPageLabel = 'Nächste Seite';
    this.paginator._intl.previousPageLabel = 'Vorherige Seite';
    this.paginator._intl.lastPageLabel = 'Letzte Seite';
    this.paginator._intl.getRangeLabel = (page: number, pageSize: number, length: number) => {
      const startIndex = page * pageSize;
      const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;
      return `${startIndex + 1} - ${endIndex} von ${length}`;
    };
    this.dataSource.paginator = this.paginator;
    this.dataSource.sort = this.sort;
  }

  ionViewWillEnter() {
    this.users = this.data.loadHausverwalter();
    this.users
      .pipe(first())
      .subscribe(users => {
        this.dataSource.data = users;

      });
    this.router.events
      .pipe(
        filter(event => event instanceof NavigationEnd && event.url === '/hausverwalter')
      ).subscribe(() => {
        this.onPageEnter();
      });
  }
  onPageEnter() {
  }

  onRowClicked(event) {
    this.navigateToUser(event.id);
  }

  navigateToUser(id) {
    this.router.navigate(['hausverwalter', id]);
  }

  search(event) {
    this.searchInput = event.detail.value;
  }

  addUser() {
    this.router.navigate(['users/edit']);
  }

  onError() {
    this.toast.presentToast(8000, 'Ein unbekannter Fehler ist aufgetreten. Sollte der Fehler weiterhin auftreten, benachrichtigen Sie bitte einen Administrator.', 'Zurück zu Übersicht').then(toast => {
      if (toast.role === 'cancel') {
        this.navCtrl.navigateBack('users');
      }
    });
  }

  applySearchFilter(event) {
    this.dataSource.filter = event.detail.value.trim().toLowerCase();
  }

  onSearchbarClose() {
    this.dataSource.filter = '';
  }

}
