import { ApiService } from '@services/api.service';
import { Component, OnInit } from '@angular/core';
import { Option } from 'shared';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import { FormGroup, FormBuilder, Validators, AbstractControl, FormControl } from '@angular/forms';

import { MAT_DATE_FORMATS, DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';
import * as moment from 'moment';
import { MomentDateAdapter } from '@angular/material-moment-adapter';
export const MY_FORMATS = {
  parse: {
    dateInput: 'DD.MM.YYYY',
  },
  display: {
    dateInput: 'DD.MM.YYYY',
    monthYearLabel: 'DD.MM.YYYY',
    dateA11yLabel: 'DD.MM.YYYY',
    monthYearA11yLabel: 'DD.MM.YYYY',
  },
};

@Component({
  selector: 'app-task-create',
  templateUrl: './task-create.component.html',
  styleUrls: ['./task-create.component.scss'],
  providers: [
    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },
    { provide: MAT_DATE_LOCALE, useValue: 'de-DE' },
    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },
  ]
})
export class TaskCreateComponent implements OnInit {

  options: Observable<Option[]>;

  schedule: FormGroup;

  constructor(private api: ApiService, public formBuilder: FormBuilder) {
    this.setupForm();
  }

  setupForm() {
    this.schedule = this.formBuilder.group({
      name: ['', [Validators.minLength(3), Validators.required]],
      optionID: ['', [Validators.required]],
      from: [new FormControl(moment()), [Validators.required]],
    });
  }

  ngOnInit() {
    this.options = this.api.getScheduleOptions()
      .pipe(
        map(result => result.options)
      );
  }

  get from(): AbstractControl {
    return this.schedule.get('from');
  }

  now() {
    return moment();
  }

}
