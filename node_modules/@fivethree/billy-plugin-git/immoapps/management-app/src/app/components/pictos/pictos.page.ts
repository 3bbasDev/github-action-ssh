import { ToastService } from '@services/toast.service';
import { ApiService } from '@services/api.service';
import { Component, OnInit } from '@angular/core';
import { User, GetPictoBase64Result } from 'shared';
import { Observable, of } from 'rxjs';
import { Store } from '@services/store/store.service';
import { filter, flatMap, map, tap, concatMap, catchError } from 'rxjs/operators';
import { FivLoadingProgressBar } from '@fivethree/core';
import { ModalController } from '@ionic/angular';
import { HttpErrorResponse } from '@angular/common/http';

@Component({
  selector: 'app-pictos',
  templateUrl: './pictos.page.html',
  styleUrls: ['./pictos.page.scss'],
})
export class PictosPage implements OnInit {


  public pictos: Observable<GetPictoBase64Result[]>;
  user: Observable<User>;
  isAdmin: boolean;

  constructor(private api: ApiService,
    private modal: ModalController,
    private toast: ToastService,
    private store: Store) { }

  ngOnInit() {
    this.user = this.store.select('user');

    this.pictos = this.user
      .pipe(
        tap(user => this.isAdmin = user.role === 'ROLE_ADMIN'),
        flatMap((user) => this.api.getPictos(user.role === 'ROLE_ADMIN')),
        map(result => result.images),
      );
  }

  onFileChanged(event, bar: FivLoadingProgressBar) {
    if (event.target.files.length === 1) {
      this.onUpload(event.target.files[0], bar);
    } else {
      const uploadData = new FormData();
      for (let i = 0; i < event.target.files.length; i++) {
        uploadData.append('files', event.target.files[i]);
      }
      bar.load();

      this.uploadMultiple(uploadData, bar);
    }
  }

  onUpload(file: File, bar: FivLoadingProgressBar) {
    console.log('on upload');
    const uploadData = new FormData();
    uploadData.append('file', file);
    bar.load();

    this.uploadPicto(uploadData, bar);
  }

  private uploadPicto(uploadData: FormData, bar: FivLoadingProgressBar) {
    console.log('upload picto');
    this.pictos = this.api.uploadPicto(uploadData, this.isAdmin)
      .pipe(
        concatMap((image: any) => this.api.getPictos(this.isAdmin)),
        map(result => result.images),
        tap(pictos => bar.complete({}))
      );
  }

  private uploadMultiple(uploadData: FormData, bar: FivLoadingProgressBar) {
    console.log('upload pictos');
    this.pictos = this.api.uploadPictos(uploadData, this.isAdmin)
      .pipe(
        concatMap((image: any) => this.api.getPictos(this.isAdmin)),
        map(result => result.images),
        tap(pictos => bar.complete({}))
      );
  }

  deletePicto(picto: GetPictoBase64Result) {
    console.log('deletePicto', picto);
    this.pictos = this.api.deletePicto(picto.id, this.isAdmin)
      .pipe(
        catchError((err: HttpErrorResponse) => {
          this.toast.error(8000, err.error.message, 'OK');
          return of({});
        }),
        concatMap((image: any) => this.api.getPictos(this.isAdmin)),
        map(result => result.images),
      );
  }

  dismiss() {
    this.modal.dismiss();
  }

  select(picto: GetPictoBase64Result) {
    this.modal.dismiss(picto);
  }

}
