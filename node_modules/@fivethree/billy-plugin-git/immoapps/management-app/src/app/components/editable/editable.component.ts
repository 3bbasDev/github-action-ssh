import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';
import { trigger, transition, style, animate } from '@angular/animations';
import { IonInput } from '@ionic/angular';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';

@Component({
  selector: 'app-editable',
  templateUrl: './editable.component.html',
  styleUrls: ['./editable.component.scss'],
  animations: [
    trigger('titleAnim', [
      transition('void => *', [
        style({ opacity: '0', transform: 'translateY(-20%)' }),
        animate('175ms ease-out', style({ opacity: '1', transform: 'translateY(0)' }))
      ]),
    ]),
  ]
})
export class EditableComponent implements OnInit {

  editing = false;
  @Input() title: string;
  @Input() component: 'TITLE' | 'LABEL' = 'LABEL';
  @Output() save = new EventEmitter<EditableComponent>();
  @ViewChild('input') input: IonInput;

  formGroup: FormGroup;

  constructor(public formBuilder: FormBuilder) {
    this.setupForm();
  }

  ngOnInit() {
  }

  setupForm() {
    this.formGroup = this.formBuilder.group({
      name: ['', [Validators.required]],
    });
  }

  edit() {
    console.log('edit');
    this.editing = true;
    this.formGroup.setValue({ name: this.title });
  }

  isValid() {
    return this.formGroup.valid;
  }

  titleAnimDone(event) {
    if (event.toState === 'void') {
      this.input.setFocus();
    }
  }

  reset() {
    console.log('reset');
    this.editing = false;
    this.formGroup.setValue({ name: '' });
  }

  getValue() {
    return this.formGroup.value.name;
  }

  onEnterClick() {
    if (this.isValid() && this.getValue() !== this.title) {
      this.save.emit(this);
    } else {
      this.reset();
    }
  }

}
