import { ToastService } from './../../services/toast.service';
import { Component, OnInit, ViewChild } from '@angular/core';
import { FormBuilder, FormControl, Validators, FormGroup, AbstractControl } from '@angular/forms';
import { NavController, IonInput } from '@ionic/angular';
import { AuthService } from '../../services/auth.service';
import { TokenService } from '../../services/token/token.service';
import { FivLoadingButton, FivLoadingProgressBar } from '@fivethree/core';

@Component({
  selector: 'app-login',
  templateUrl: './login.page.html',
  styleUrls: ['./login.page.scss'],
})
export class LoginPage {

  loginForm: FormGroup;
  @ViewChild('loading') loading;
  @ViewChild('emailI') emailInput: IonInput;

  constructor(public formbuilder: FormBuilder,
    public auth: AuthService,
    public navCtrl: NavController,
    public token: TokenService, public toast: ToastService) {

    this.loginForm = formbuilder.group({
      email: new FormControl('', [Validators.email, Validators.required]),
      password: new FormControl('', [Validators.minLength(6), Validators.required]),
    });

  }

  ionViewWillEnter() {
  }

  login(loading: FivLoadingProgressBar) {
    loading.load();
    this.auth.signIn({ email: this.loginForm.value.email, password: this.loginForm.value.password })
      .subscribe((data) => {
        loading.complete(data);
      }, err => {
        if(err.status == 401){
          this.onWrongCredentials();
        }else{
          this.onError();
        }
        this.loading.unload();
      });
  }

  onError() {
    this.toast.presentToast(8000, 'Ein unbekannter Fehler ist aufgetreten. Sollte der Fehler weiterhin auftreten, benachrichtigen Sie bitte einen Administrator.', 'Erneut versuchen').then(toast => {
      if(toast.role === 'cancel'){
        this.emailInput.setFocus();
      }
    });
  }
  onWrongCredentials() {
    this.toast.presentToast(8000, 'Es existiert kein Account mit der angegebenen Benutzer-Passwort-Kombination. Bitte überprüfen Sie Ihre Eingabe und versuchen Sie es erneut.', 'OK').then(toast => {
      if(toast.role === 'cancel'){
        this.emailInput.setFocus();
      }
    });
  }

  loginComplete() {
    this.token.loggedIn.next(true);
    this.navCtrl.navigateRoot('/', {animated: true});
  }
  
  get email(): AbstractControl {
    return this.loginForm.get('email');
  }

  get password(): AbstractControl {
    return this.loginForm.get('password');
  }

  goToPasswordReset(){
    this.navCtrl.navigateForward('/password/reset', {animated: true});

  }

}
