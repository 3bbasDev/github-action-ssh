import { Store, Action } from './store/store.service';
import { JwtHelperService } from '@auth0/angular-jwt';
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { tap } from 'rxjs/operators';
import { TokenService } from './token/token.service';
import { LoginPayload, LoginResult, ChangePasswordPayload } from 'shared';
import { environment } from '@environments/environment';

@Injectable({
  providedIn: 'root'
})
export class AuthService {


  private basePath = `${environment.baseURL}/auth`;
  jwtHelper: JwtHelperService;


  constructor(public http: HttpClient, public token: TokenService, public store: Store) {
    this.jwtHelper = new JwtHelperService();
  }

  signIn(payload: LoginPayload) {
    const login = this.http.post<LoginResult>(`${this.basePath}/signin`, payload)
      .pipe(tap(data => {
        this.token.setToken(data.accessToken);
        this.store.dispatch(new Action('UPDATE', { user: data.user }));
      }),
      );

    // login.subscribe(data => {
    //   this.saveUser(data.accessToken);
    // });

    return login;
  }

  changePassword(payload: ChangePasswordPayload) {
    return this.http.post(`${this.basePath}/changepassword`, payload);
  }


}
