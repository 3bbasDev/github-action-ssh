import { Property, Category } from 'shared';
import { ActivatedRoute } from '@angular/router';
import { Component, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { ActionSheetController } from '@ionic/angular';
import { CommonService } from '../../services/common.service';
import { Store } from '@ngxs/store';
import { PropertiesState } from '@store/properties/properties.state';
import { NotifyWarning } from '@store/notify/notify.actions';
import { Dispatch } from '@ngxs-labs/dispatch-decorator';

@Component({
  selector: 'page-property',
  templateUrl: './property.page.html',
  styleUrls: ['./property.page.scss'],
})
export class PropertyPage implements OnInit {

  propertyId: number;

  property: Observable<Property>;
  selectedCat: Category;

  constructor(private route: ActivatedRoute,
    private store: Store,
    private actionSheetController: ActionSheetController,
    private common: CommonService) {

  }

  ngOnInit() {

  }

  ionViewWillEnter() {
    this.propertyId = +this.route.snapshot.paramMap.get('id');
    this.property = this.store.select(PropertiesState.getProperty(this.propertyId));
  }

  async presentActionSheet(property: Property) {
    const actionSheet = await this.actionSheetController.create({
      header: property.name,
      subHeader: property.address,
      buttons: [{
        text: 'Hierhin navigieren',
        icon: 'md-navigate',
        handler: () => {
          console.log('navigate');

        }
      }, {
        text: 'Nichts tun',
        icon: 'close',
        role: 'cancel',
        handler: () => {
          console.log('Cancel clicked');
        }
      }]
    });

    await actionSheet.present();
  }

  navigate(property: Property) {
    this.common.openNavigation(property.address);
  }

  @Dispatch()
  presentToast = () => new NotifyWarning('Eine Begehung kann derzeit noch nicht ausgef√ºhrt werden.')

}
