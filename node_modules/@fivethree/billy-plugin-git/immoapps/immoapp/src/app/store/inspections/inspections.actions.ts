import { AddInspectionPayload, Inspection, AddInspectionResultPayload } from 'shared';

export class GetInspections {
    static readonly type = '[Inspection Api] GetInspections';
}
export class GetClosedInspections {
    static readonly type = '[Inspection Api] GetClosedInspections';
}

export class CreateInspection {
    static readonly type = '[Inspection Api] CreateInspection';
    constructor(public readonly payload: AddInspectionPayload) { }
}

export class SaveInspectionLocally {
    static readonly type = '[Inspection State] SaveInspectionLocally';
    constructor(public readonly payload: Inspection) {}
}

export class CreateInspectionResult {
    static readonly type = '[Inspection Api] CreateInspectionResult';
    constructor(public readonly payload: AddInspectionResultPayload,
        public readonly inspectionId: number) { }
}
export class SaveInspectionResultLocally {
    static readonly type = '[Inspection State] SaveInspectionResultLocally';
    constructor(public readonly payload: AddInspectionResultPayload,
        public readonly inspectionId: number) {}
}

export class DeleteInspectionResultLocally {
    static readonly type = '[Inspection State] DeleteInspectionResultLocally';
    constructor(public readonly payload: AddInspectionResultPayload,
        public readonly inspectionId: number) {}
}


/**
 * Events
 */

export class InspectionCreatedSuccesful {
    static readonly type = '[Inspection Event] InspectionCreatedSuccesful';
    constructor(public readonly payload: Inspection) { }
}

export class InspectionResultCreatedSuccesful {
    static readonly type = '[Inspection Event] InspectionResultCreatedSuccesful';
    constructor(public readonly payload: Inspection) { }
}


