package de.fivethree.immoapps.backend.controller.webapp;

import de.fivethree.immoapps.backend.model.csv.FileRep;
import de.fivethree.immoapps.backend.model.payload.req.admin.EntityCreationReportReq;
import de.fivethree.immoapps.backend.model.payload.res.admin.EntityCreationReportRes;
import de.fivethree.immoapps.backend.model.payload.res.common.ApiResponse;
import de.fivethree.immoapps.backend.service.AdminActionsService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ByteArrayResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;

@RestController
@RequestMapping("/immoapps/api/adminactions")
public class AdminActionsController {
    @Autowired
    private AdminActionsService adminActionsService;

    @GetMapping("/hausverwalter/{hausverwalterId}/properties/csv")
    @PreAuthorize("hasRole('ADMIN')")
    public ResponseEntity<?> getHausverwalterPropertiesAsCsv(@PathVariable Long hausverwalterId) {
        FileRep fileRep = adminActionsService.getHausverwalterPropertiesAsCsv(hausverwalterId);

        return ResponseEntity.ok().contentType(MediaType.TEXT_PLAIN)
                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + fileRep.getFileName() + "\"")
                .body(new ByteArrayResource(fileRep.getData()));
    }

    @PostMapping("/hausverwalter/{hausverwalterId}/properties/csv")
    @PreAuthorize("hasRole('ADMIN')")
    public ResponseEntity<?> saveHausverwalterProperties(@PathVariable Long hausverwalterId,
                                                         @RequestParam("file") MultipartFile file) {
        try {
            adminActionsService.saveHausverwalterPropertiesFromCsv(hausverwalterId, file.getInputStream());
            return ResponseEntity.ok().build();
        } catch (IOException e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(
                    new ApiResponse(false, e.getMessage()));
        }
    }

    @PostMapping("/hausverwalter/{hausverwalterId}/entitycreation/report")
    @PreAuthorize("hasRole('ADMIN')")
    public ResponseEntity<?> getHausverwalterEntityCreationReport(@PathVariable Long hausverwalterId,
                                                                  @RequestBody EntityCreationReportReq entityCreationReportReq) {
        EntityCreationReportRes ret = adminActionsService.getHausverwalterEntityCreationReport(hausverwalterId,
                entityCreationReportReq);
        return ResponseEntity.ok(ret);
    }

}
