package de.fivethree.immoapps.backend.domain.checklisttemplate;

import de.fivethree.immoapps.backend.domain.checklist.IChecklistTemplate;
import de.fivethree.immoapps.backend.domain.user.User;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "checklist_template")
public class ChecklistTemplate implements IChecklistTemplate {

    public ChecklistTemplate() {}

    public ChecklistTemplate(String name) {
        this.name = name;
    }

    public ChecklistTemplate(String name, Boolean defaultChecklist) {
        this.name = name;
        this.defaultChecklist = defaultChecklist;
    }

    @Id
    @GeneratedValue(generator = "sequence")
    @SequenceGenerator(name="sequence", sequenceName="MY_SEQ", allocationSize=1, initialValue = 1000)
    private Long id;

    @NotBlank
    @Column
    private String name;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "hausverwalter_id")
    private User hausverwalter;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "checklistTemplate", cascade = {CascadeType.ALL}, orphanRemoval = true)
    private Set<ChecklistTemplateLevel> levels = new HashSet<>();

    @Column
    private Boolean defaultChecklist = false;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public User getHausverwalter() {
        return hausverwalter;
    }

    public void setHausverwalter(User hausverwalter) {
        this.hausverwalter = hausverwalter;
    }

    public Set<ChecklistTemplateLevel> getLevels() {
        return levels;
    }

    public void setLevels(Set<ChecklistTemplateLevel> levels) {
        this.levels = levels;
    }

    public Boolean getDefaultChecklist() {
        return defaultChecklist;
    }

    public void setDefaultChecklist(Boolean defaultChecklist) {
        this.defaultChecklist = defaultChecklist;
    }
}
